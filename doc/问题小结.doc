1、全局组件
main.js  导入，注册
2、全局的方法
main.js 导入 给Vue的原型添加   Vue.prototype.axios = axios
在组件内部 this.axios
3、私有样式  <style scoped>
4、mint-ui
很多插件需要给外层的容器设置高度[，overflow:auto]


//admin
1、git  github/pull add commit push branch

2、子路由配置 children:[{path:"",component:xxx},{}]

3、路由动画
<transition name="el-zoom-in-center">
  <router-view></router-view>
</transition>

4、el 布局组件使用
注意：样式不能满足需要可以添加 class

5、header  (el-dropdown) 自定义里面的 内容


6、sideMenu  
default-active： 默认选中的选项 (可以通过路由获取 this.$route.path)
index：没有菜单选项的表示 （还可以当做路由的路径）
router:会在激活导航时以 index 作为 path 进行路由跳转 (可以使用 select事件代替)


没有子菜单：
<el-menu-item index="/order_tui">
    <i class="el-icon-menu"></i>
    <span slot="title">退换货</span>
</el-menu-item>
有子菜单
<el-submenu index="cate">
  <template slot="title">
    <i class="el-icon-document"></i>
    <span>分类管理</span>
  </template>
    <el-menu-item index="/cate_add">添加分类</el-menu-item>
    <el-menu-item index="/cate_list">管理分类</el-menu-item>
</el-submenu>

7、路由的编程式导航
this.$router.push("/home")
this.$router.push({ path: "/home", query: { plan: 'private' }}) //,params:{} params是路由传参（detail:/id）


8、多级路由 需要使用 router-view嵌套

9、组件的异步加载   import Product from "xxx"   变成   ()=>import("xxx")  可以webpack文件打包过大的问题

10、el-form相关组件 
以及el-upload    
action : 图片上传的地址 
name: 上传图片的字段名
:on-success="handleAvatarSuccess" 上传成功回调 

handleAvatarSuccess(res, file) {
    console.log(res,file,)
    //图片上传成功，保存图片的服务器地址
    this.cateData.catePic = "http://localhost:8000"+res.imgSrc.replace("public","")
}, 

11、el-table,el-pagination 分页
分页插件
:page-count="totalPage" //总页数
@current-change="currentChange" //点击按钮，上一页，下一页，改变页面时触发 
currentChange（currentPage）{
   this.$store.commit("product/changePageNum",{currentPage}) //先提交 修改页码的请求
   
   this.getListData() //修改完页码再获取数据（不用关注页码的问题）
}

12、分类，关键字搜索  （一级，二级分类联动效果 <=>省市区三联动）
el-select 
@change="fn"   : fn(value) //当选中值发生改变的时候出发
watch 监听某个值的 改变

13、多图上传 （上传成功，保存图片地址）

14富文本编辑器 vue2-editor

自定义图片上传
 handleImageAdded(file, Editor, cursorLocation) {
        // An example of using FormData
        // NOTE: Your key could be different such as:
        // formData.append('file', file)
        var formData = new FormData();//formData对象 （是formData对象传递文件数据）
        formData.append('roompic', file) //添加一个字段和， 值（图片）

        this.axios({
          url: 'http://localhost:8000/api/uploadImg',
          method: 'POST',
          data: formData
        })
        .then((res) => {
          //富文本编辑器上传图片成功

          // Get url from response
          let url = "http://localhost:8000"+res.data.imgSrc.replace("public","") 
          console.log(url)
          Editor.insertEmbed(cursorLocation, 'image', url); //给文本编辑器里面插入图片
        })
        .catch((err) => {
          console.log(err);
        })
      }
15、把数据提交给后端 qs axio(method:post)



